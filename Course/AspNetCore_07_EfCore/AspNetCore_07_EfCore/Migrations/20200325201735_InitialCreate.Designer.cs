// <auto-generated />
using System;
using AspNetCore_07_EfCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cupcakes.Migrations
{
    [DbContext(typeof(CupcakeContext))]
    [Migration("20200325201735_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cupcakes.Models.Bakery", b =>
                {
                    b.Property<int>("BakeryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("BakeryName")
                        .HasMaxLength(50);

                    b.Property<int>("Quantity");

                    b.HasKey("BakeryId");

                    b.ToTable("Bakeries");

                    b.HasData(
                        new { BakeryId = 1, Address = "Olmbroroad 6", BakeryName = "Jonas Bakery", Quantity = 13 },
                        new { BakeryId = 2, Address = "Kvinnersta 13", BakeryName = "Jannes Cupcakes", Quantity = 2 }
                    );
                });

            modelBuilder.Entity("Cupcakes.Models.CupCake", b =>
                {
                    b.Property<int>("CupcakeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BakeryId")
                        .IsRequired();

                    b.Property<int>("CupcakeType");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("GlutenFree");

                    b.Property<string>("ImageMimeType");

                    b.Property<string>("ImageName");

                    b.Property<byte[]>("PhotoFile");

                    b.Property<double?>("Price")
                        .IsRequired();

                    b.HasKey("CupcakeId");

                    b.HasIndex("BakeryId");

                    b.ToTable("Cupcakes");

                    b.HasData(
                        new { CupcakeId = 1, BakeryId = 1, CupcakeType = 0, Description = "Birthday cake", GlutenFree = true, ImageMimeType = "image/jpeg", ImageName = "birthday-cupcake.jpg", Price = 2.5 },
                        new { CupcakeId = 2, BakeryId = 2, CupcakeType = 0, Description = "Chocolate muffin", GlutenFree = false, ImageMimeType = "image/jpeg", ImageName = "pink-cupcake.jpg", Price = 1.2 },
                        new { CupcakeId = 3, BakeryId = 1, CupcakeType = 0, Description = "Strawberry panncake", GlutenFree = true, ImageMimeType = "image/jpeg", ImageName = "turquoise-cupcake.jpg", Price = 3.6 }
                    );
                });

            modelBuilder.Entity("Cupcakes.Models.CupCake", b =>
                {
                    b.HasOne("Cupcakes.Models.Bakery", "Bakery")
                        .WithMany("Cupcakes")
                        .HasForeignKey("BakeryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
